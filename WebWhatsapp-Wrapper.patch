diff -Naur old/WebWhatsapp-Wrapper/webwhatsapi/objects/message.py new/WebWhatsapp-Wrapper/webwhatsapi/objects/message.py
--- old/WebWhatsapp-Wrapper/webwhatsapi/objects/message.py	2020-11-21 00:16:45.248216296 +0100
+++ new/WebWhatsapp-Wrapper/webwhatsapi/objects/message.py	2020-11-21 00:17:34.102218052 +0100
@@ -65,6 +65,16 @@
             self.content = ""
             self.safe_content = "..."
 
+        if js_obj["quotedStanzaID"]:
+            self.quoting = js_obj["quotedStanzaID"]
+        else:
+            self.quoting = ""
+
+        if js_obj["isForwarded"]:
+            self.forwarded = js_obj["isForwarded"]
+        else:
+            self.forwarded = False
+
     def __repr__(self):
         return "<Message - {type} from {sender} at {timestamp}: {content}>".format(
             type=self.type,
@@ -174,13 +184,6 @@
 
 class NotificationMessage(Message):
     def __init__(self, js_obj, driver=None):
-        super(NotificationMessage, self).__init__(js_obj, driver)
-        self.type = js_obj["type"]
-        self.subtype = js_obj["subtype"]
-        if js_obj["recipients"]:
-            self.recipients = [getContacts(x, driver) for x in js_obj["recipients"]]
-
-    def __repr__(self):
         readable = {
             "call_log": {"miss": "Missed Call"},
             "e2e_notification": {"encrypt": "Messages now Encrypted"},
@@ -192,13 +195,21 @@
                 "leave": "Left the group",
             },
         }
+        super(NotificationMessage, self).__init__(js_obj, driver)
+        self.type = js_obj["type"]
+        self.subtype = js_obj["subtype"]
+        self.readable = readable[self.type][self.subtype]
+        if js_obj["recipients"]:
+            self.recipients = [getContacts(x, driver) for x in js_obj["recipients"]]
+
+    def __repr__(self):
         sender = (
             ""
             if not self.sender
             else ("from " + str(safe_str(self.sender.get_safe_name())))
         )
         return "<NotificationMessage - {type} {recip} {sender} at {timestamp}>".format(
-            type=readable[self.type][self.subtype],
+            type=self.readable,
             sender=sender,
             timestamp=self.timestamp,
             recip=""
